[{"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\index.js":"1","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\App.js":"2","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\context\\context.js":"3","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Details\\Details.jsx":"4","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Details\\styles.js":"5","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\styles.js":"6","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\Main.jsx":"7","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\styles.js":"8","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\Form.jsx":"9","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\styles.js":"10","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\List\\List.jsx":"11","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\List\\styles.js":"12","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\context\\contextReducer.js":"13","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\constants\\categories.js":"14","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\utils\\formatDate.js":"15","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\useTransactions.js":"16"},{"size":452,"mtime":1652036483864,"results":"17","hashOfConfig":"18"},{"size":1073,"mtime":1652036698961,"results":"19","hashOfConfig":"18"},{"size":1479,"mtime":1652116199641,"results":"20","hashOfConfig":"18"},{"size":961,"mtime":1651931044168,"results":"21","hashOfConfig":"18"},{"size":366,"mtime":1651900493504,"results":"22","hashOfConfig":"18"},{"size":580,"mtime":1651901318175,"results":"23","hashOfConfig":"18"},{"size":1384,"mtime":1652114875743,"results":"24","hashOfConfig":"18"},{"size":512,"mtime":1651902364462,"results":"25","hashOfConfig":"18"},{"size":5614,"mtime":1652113503379,"results":"26","hashOfConfig":"18"},{"size":245,"mtime":1651903075659,"results":"27","hashOfConfig":"18"},{"size":1950,"mtime":1651917691508,"results":"28","hashOfConfig":"18"},{"size":416,"mtime":1608444006000,"results":"29","hashOfConfig":"18"},{"size":804,"mtime":1652117428360,"results":"30","hashOfConfig":"18"},{"size":1737,"mtime":1651918103947,"results":"31","hashOfConfig":"18"},{"size":471,"mtime":1651919474881,"results":"32","hashOfConfig":"18"},{"size":1859,"mtime":1652117060499,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11l7d8g",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\index.js",[],["68","69"],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\App.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\context\\context.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Details\\styles.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\styles.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\styles.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\Form.jsx",["70"],"import React, { useState, useEffect, useContext} from 'react'\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\n// import expense tracker context\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\n// import uuid for unique id\r\nimport { v4 as uuidv4 } from 'uuid'\r\n// context hook for generating transcript\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport useStyles from './styles';\r\n// importing categories\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\n\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: 'Income',\r\n    date: formatDate( new Date()), \r\n}\r\n\r\nconst Form = () => {\r\n    //  calling the usestyles function\r\n    const classes = useStyles()\r\n    const [ formData, setFormData ] = useState(initialState)\r\n    // accepting the function into our component\r\n    const { addTransaction } = useContext( ExpenseTrackerContext );\r\n    // function from speechly api\r\n    const { segment } = useSpeechContext();\r\n\r\n    const createTransaction = () =>{\r\n        // error handling for not creating the transaction\r\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n        const transaction = {...formData, amount: Number(formData.amount), id: uuidv4()}\r\n        // call the addtransaction\r\n        addTransaction(transaction);\r\n        // resetting the state field\r\n        setFormData(initialState)  \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (segment){\r\n            // read our intents\r\n            //  segment isFinal occur when users done talking\r\n            if ( segment.intent.intent === 'add_expense'){\r\n                setFormData({...formData, type: 'Expense'});\r\n            } else if (segment.intent.intent === 'add_income'){\r\n                setFormData({...formData, type: 'Income'});\r\n            } else if( segment.isFinal && segment.intent.intent === 'create_transaction'){\r\n                return createTransaction\r\n            }else if(segment.isFinal && segment.intent.intent ==='cancel_transaction'){\r\n                return setFormData(initialState)\r\n            }\r\n\r\n            // pickup catergory, amount and date\r\n            segment.entities.forEach((e)=>{\r\n                // take all the characters in the option tab\r\n                //  take the first string and other character\r\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\r\n\r\n                switch(e.type){\r\n                    case 'amount':\r\n                        setFormData({ ...formData, amount: e.value});\r\n                        break;\r\n                    case 'category':\r\n                        // only true if the type is included in that category\r\n                        if (incomeCategories.map((ic) => ic.type).includes(category)){\r\n                            setFormData({ ...formData, type: 'Income', category});\r\n                        }else if(expenseCategories.map((ic)=> ic.type).includes(category)){\r\n                            setFormData({...formData, type: 'Expense', category});\r\n                        }\r\n                        break;\r\n                    case 'date':\r\n                        setFormData({ ...formData, date: e.value});\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n\r\n            //  segment.isFinal occurs when the user is done talking\r\n            if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date){\r\n                createTransaction()\r\n            }\r\n        }\r\n    }, [segment])\r\n\r\n    // variable for selected categories\r\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories \r\n  return (\r\n    <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n            <Typography align='center' variant='subtitle2' gutterBottom>\r\n                { segment && segment.words.map((w) => w.value).join(\" \")}\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <FormControl fullWidth>\r\n                <InputLabel>Type</InputLabel>\r\n                <Select value={formData.type} onChange= {(e)=> setFormData({...formData, type: e.target.value })}>\r\n                    <MenuItem value=\"Income\">Income</MenuItem>\r\n                    <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <FormControl fullWidth>\r\n                <InputLabel>Category</InputLabel>\r\n                <Select value={formData.category} onChange= {(e)=> setFormData({...formData, category: e.target.value })}>\r\n                    { selectedCategories.map((c) => <MenuItem key={c.type} value={c.type} >{c.type}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n        </Grid>\r\n        <Grid item xs={6} >\r\n            <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value ) })} />\r\n        </Grid>\r\n        <Button className={classes.button} variant=\"outlined\" color='primary' fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Form","C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\context\\contextReducer.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\constants\\categories.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\utils\\formatDate.js",[],"C:\\Users\\Nonso\\Desktop\\destop-folder\\port folio\\project\\speechly_expense_tracker_project\\src\\useTransactions.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":85,"column":8,"nodeType":"77","endLine":85,"endColumn":17,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"84","text":"85"},[3743,3752],"[createTransaction, formData, segment]"]